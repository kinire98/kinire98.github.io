---
import MenuLayout from "../layouts/MenuLayout.astro";
import ProjectCard from "../components/ProjectCard.astro";
import ProjectCounter from "../components/ProjectCounter.astro";
import orderGithubProjects from "../helpers/orderGithubProjects";

//const res = await fetch("https://api.github.com/users/kinire98/repos");
//let json = await res.json();
import jsonTest from "../helpers/jsontest";
let json = JSON.parse(jsonTest());

json = orderGithubProjects(json);
---

<MenuLayout title="Projects - kinire">
	<div>
		{
			json.map((ob: any) => (
				<ProjectCard 
          name={ob.name}
					desc={ob.description}
					url={ob.html_url}
					language={ob.language}
					has_pages={ob.has_pages}
				/>
			))
		}
		<img src="/github.svg" id="img-github" />
		<ProjectCounter num={json.length} />
	</div>
</MenuLayout>

<script>
	import openLink from "../helpers/openLink";
	import showLetters from "../helpers/showLetters";
	const $projects = document.querySelectorAll(".project");
	const $projectsArrow = document.querySelectorAll(".change");
	// ! If changed, change also the one in the Project Counter
	const INTERVALLENGTH: number = 9500;

	let position: number = 0;

	const show = ($el: HTMLElement) => {
		$el.style.visibility = "visible";
		$el.style.opacity = "1";
		const $title: HTMLElement = $el.querySelector("h2")!;
		showLetters($title, INTERVALLENGTH);
	};
	const hide = ($el: HTMLElement) => {
		$el.style.visibility = "hidden";
		$el.style.opacity = "0";
		$el.querySelector("h2")!.style.display = "none";
		$el.querySelector("h2")!.innerHTML = "";
	};
	const getShownElement = (): number => {
		return 0;
	};

	$projects.forEach((el) => {
		const positionInside = position;
		const $el = el as HTMLElement;
		//Show the letters of each project
		// Hide them
		hide($el);
		// Position update
		position++;
		// Opening the link to the github repo
		const $githubRepo = el.querySelector("[data-href]") as HTMLElement;
		openLink($githubRepo, $githubRepo.dataset.href!);

		// Creating the a for opening ghpages in case the project has one
		const $hasghPages = el.querySelector("[data-path]");
		if ($hasghPages !== null) {
			const $ghpages = $hasghPages as HTMLElement;
			openLink($ghpages, $ghpages.dataset.path!);
		}
	});

	let counter = 0;
	show($projects[counter] as HTMLElement);
	let interval = setInterval(() => {
		console.log("counter: " + counter);
		console.log("lenght: " + ($projects.length - 1));
		hide($projects[counter] as HTMLElement);
		counter++;
		if (counter >= $projects.length) counter = 0;
		show($projects[counter] as HTMLElement);
	}, INTERVALLENGTH);

	$projectsArrow[0].addEventListener("click", () => {
		hide($projects[counter] as HTMLElement);
		counter--;
		if (counter < 0) counter = $projects.length - 1;
		show($projects[counter] as HTMLElement);
		clearInterval(interval);
		interval = setInterval(() => {
			console.log("counter: " + counter);
			console.log("lenght: " + ($projects.length - 1));
			hide($projects[counter] as HTMLElement);
			counter++;
			if (counter >= $projects.length) counter = 0;
			show($projects[counter] as HTMLElement);
		}, INTERVALLENGTH);
	});
	$projectsArrow[1].addEventListener("click", () => {
		hide($projects[counter] as HTMLElement);
		counter++;
		if (counter >= $projects.length) counter = 0;
		show($projects[counter] as HTMLElement);
		clearInterval(interval);
		interval = setInterval(() => {
			console.log("counter: " + counter);
			console.log("lenght: " + ($projects.length - 1));
			hide($projects[counter] as HTMLElement);
			counter++;
			if (counter >= $projects.length) counter = 0;
			show($projects[counter] as HTMLElement);
		}, INTERVALLENGTH);
	});

	openLink(
		document.getElementById("img-github") as HTMLElement,
		"https://github.com/kinire98"
	);
</script>
<style>
	div {
		height: 100dvh;
		width: 100dvw;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	img {
		position: absolute;
		width: 50px;
		height: 50px;
		top: 30px;
		right: 30px;
		transition: all 0.3s;
	}
	img:hover {
		filter: drop-shadow(0 0 5px var(--cont));
	}
</style>
<style is:global>
	body {
		overflow: hidden;
	}
</style>
