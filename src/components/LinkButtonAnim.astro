---
interface Props {
    id: string;
    content: string;
    path: string;
}
const { id, content, path } = Astro.props;
---

<button id={id} data-path={path} >
  { content }
  <div></div>
</button>


<style>
button {
  position: relative;
  text-transform: uppercase;
  background-color: transparent;
  font-variant: small-caps;
  font-weight: bold;
  width: 100%;
  color: var(--white);
  border: none;
  /*border-radius: 1em;*/
  font-size: 1.2em;
  cursor: pointer;
  letter-spacing: 1px;
  transition: all .5s;
  height: 80px;
}
button:hover {
  text-shadow: 0 0 3px var(--white);
  letter-spacing: 5px;
}
button div {
  width: 100%;
  border-bottom: 1px solid var(--cont);
  position: absolute;
  bottom: 0;
  transition: all .5s;
}
button:hover div {
  width: 80%;
  transform: translateX(11%);
}
#about_me {
  opacity: 0;
  animation: beginning-animation 2s ease-out forwards;
}
#projects {
  opacity: 0;
  animation: beginning-animation 2s ease-out forwards .3s;
}
#blog {
  opacity: 0;
  animation: beginning-animation 2s ease-out forwards .6s;
}
#contact {
  opacity: 0;
  animation: beginning-animation 2s ease-out forwards .9s;
}
@keyframes beginning-animation {
 0% {
   opacity: 0;
   transform: translateY(-20px);
 }  
 100% {
   opacity: 1;
   transform: translateY(0px);
 }
}
@media screen and (max-height: 300px) {
  button {
    height: 55px;
    font-size: 1em;
  }
}
</style>