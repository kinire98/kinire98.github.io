---
import LinkButton from "./LinkButton.astro";
---

<button class="hamburger hamburger--squeeze" type="button">
	<span class="hamburger-box">
		<span class="hamburger-inner"></span>
	</span>
</button>
<aside>
	<ul>
		<li>
			<LinkButton id="home" content="Home" path="/" />
		</li>
		<li>
			<LinkButton id="about_me" content="AboutÂ me" path="/about_me" />
		</li>
		<li>
			<LinkButton id="projects" content="Projects" path="/projects" />
		</li>
		<li>
			<LinkButton id="blog" content="Blog" path="/blog" />
		</li>
		<li>
			<LinkButton id="contact" content="Contact" path="/contact" />
		</li>
	</ul>
</aside>
<div id="black">
	<span id="joke">Made with ðŸ—¿&#8205;ðŸ¤™</span>
</div>

<script>
	import openPage from "../helpers/openPage";
	import openLink from "../helpers/openLink";
	const $ham = document.querySelector(".hamburger");
	const $aside = document.querySelector("aside");
	const $black = document.querySelector("#black");
	let hidden = true;
	function changes() {
		$ham?.classList.toggle("is-active");
		$aside?.classList.toggle("is-active");
		$black?.classList.toggle("is-active");
		if (hidden) {
			document.body.style.overflowY = "hidden";
			hidden = false;
		} else {
			document.body.style.overflowY = "scroll";
			hidden = true;
		}
	}
	$ham?.addEventListener("click", changes);
	$black?.addEventListener("click", () => {
		if (!hidden) changes();
	});
	let $els = document.querySelectorAll("aside button[data-path]");
	$els?.forEach((element) => {
		const $el = element as HTMLElement;
		openPage($el, $el.dataset.path!);
	});
	openLink(
		document.getElementById("joke") as HTMLElement,
		"https://github.com/kinire98/kinire98.github.io"
	);
</script>
<style>
	@import "../styles/hamburgers.min.css";
	.hamburger {
		border-radius: 50%;
		position: fixed;
		left: 3vw;
		top: 3vh;
		left: 3dvw;
		top: 3dvh;
		z-index: 999;
		background-color: transparent;
		transition: transform 1s;
	}
	.hamburger.is-active .hamburger-inner,
	.hamburger.is-active .hamburger-inner::after,
	.hamburger.is-active .hamburger-inner::before,
	.hamburger-inner,
	.hamburger-inner::after,
	.hamburger-inner::before {
		background-color: var(--white);
		box-shadow:
			0 0 10px var(--cont),
			0 0 20px var(--cont),
			0 0 40px var(--cont),
			0 0 80px var(--cont),
			0 0 160px var(--cont);
		animation: animate 8s linear forwards;
	}
	aside {
		display: flex;
		align-items: center;
		justify-content: center;
		height: 100%;
		width: 30dvw;
		position: fixed;
		top: 0;
		right: -50dvw;
		background-color: var(--sbgc);
		transition: 0.75s all ease;
		z-index: 999;
	}
	aside.is-active {
		right: 0vw;
	}
	aside ul {
		width: 100%;
		height: 80dvh;
		display: flex;
		align-items: center;
		justify-content: space-between;
		align-items: center;
		flex-direction: column;
	}
	aside ul li {
		width: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	#black {
		position: fixed;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		background-color: var(--black-transp);
		z-index: 998;
		opacity: 0;
		visibility: hidden;
		transition: 0.75s all ease;
		display: flex;
		align-items: center;
		justify-content: center;
		span {
			color: var(--white);
			text-align: center;
			position: relative;
			cursor: pointer;
			right: 17.5vw;
			right: 17.5dvw;
		}
		span:hover {
			text-decoration: underline;
		}
	}
	#black.is-active {
		opacity: 1;
		visibility: visible;
	}
	@media screen and (max-width: 1100px) {
		aside {
			width: 50vw;
			right: -60vw;
			width: 50dvw;
			right: -60dvw;
		}
		#black span {
			right: 25vw;
			right: 25dvw;
		}
	}
	@media screen and (max-width: 750px) {
		/*aside ul {
    position: relative;
    bottom: 30px;
  }*/
		aside ul li {
			width: 75%;
		}
		#black span {
			right: 20vw;
			right: 20dvw;
		}
	}
	@media screen and (max-width: 450px) {
		aside {
			width: 60vw;
			right: -70vw;
			width: 60dvw;
			right: -70dvw;
		}
		#black span {
			right: 30vw;
			right: 30dvw;
		}
	}
	@media screen and (max-width: 375px) {
		aside {
			width: 70vw;
			right: -80vw;
			width: 70dvw;
			right: -80dvw;
		}
		#black span {
			width: 1px;
			right: 40vw;
			right: 40dvw;
		}
	}
	@media screen and (max-height: 700px) {
		aside ul {
			height: 95%;
		}
		aside ul li {
			height: 80%;
		}
	}
	@media screen and (max-height: 500px) {
		aside ul {
			height: 80%;
			position: relative;
			bottom: 20px;
		}
	}
	@media screen and (max-height: 500px) {
		aside ul {
			height: 70%;
			position: relative;
		}
	}
	@media screen and (max-height: 400px) {
		aside ul {
			height: 90%;
			position: relative;
		}
	}
	@media screen and (max-height: 300px) {
		aside ul {
			height: 95%;
			position: relative;
		}
	}
</style>
