---
import LinkButton from "./LinkButton.astro"
---


<button class="hamburger hamburger--squeeze" type="button">
  <span class="hamburger-box">
    <span class="hamburger-inner"></span>
  </span>
</button>
<aside> 
  <ul>
    <li>
        <LinkButton id="home" content="Home" path="/" />
    </li>
    <li>
        <LinkButton id="about_me" content="About&nbsp;me" path="/about_me" />
    </li>
    <li>
        <LinkButton id="projects" content="Projects" path="/projects" />
    </li>
    <li>
        <LinkButton id="blog" content="Blog" path="/blog" />
    </li>
    <li>
        <LinkButton id="contact" content="Contact" path="/contact" />
    </li>
  </ul>
</aside>
<div id="black">
    <span id="joke">Made with ðŸ—¿ðŸ¤™</span>
</div>

<script>
  import openPage from "../helpers/openPage";
  import openLink from "../helpers/openLink";
  const $ham = document.querySelector('.hamburger')
  const $aside = document.querySelector('aside');
  const $black = document.querySelector('#black');
  let hidden = true;
  function changes() {
      $ham?.classList.toggle('is-active');
      $aside?.classList.toggle('is-active');
      $black?.classList.toggle('is-active');
      if (hidden) {
        document.body.style.overflowY = "hidden";
        hidden = false;
      } else {
        document.body.style.overflowY = "scroll";
        hidden = true;
      }  
  }
  $ham?.addEventListener('click', changes); 
  $black?.addEventListener('click', (e) => {
      if(!hidden) changes();

  }); 
  let $els = document.querySelectorAll('aside button[data-path]');
  $els?.forEach(element => {
    const $el = element as HTMLElement;
    openPage($el, $el.dataset.path!);
  });
    openLink(document.getElementById('joke') as HTMLElement, "https://github.com/kinire98/kinire98.github.io")    
</script>
<style>
@import '../styles/hamburgers.min.css';
.hamburger {
  border-radius: 50%;
  position: fixed;
  right: 3dvw;
  bottom: 3dvh;
  z-index: 999;
  background-color: transparent;
  transition: transform 1s;
}
.hamburger.is-active .hamburger-inner, 
.hamburger.is-active .hamburger-inner::after, 
.hamburger.is-active .hamburger-inner::before,
.hamburger-inner, .hamburger-inner::after,
.hamburger-inner::before {
    background-color:var(--cont);
    box-shadow: 0 0 2px var(--cont),
                0 0 4px var(--cont);
}
aside {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  height: 100dvh;
  width: 30dvw;
  position: fixed;
  top: 0;
  left: -50dvw;
  background-color: var(--sbgc);
  transition: .75s all ease;
  z-index: 999;
}
aside.is-active {
  left: 0vw;
}
aside ul {
  width: 100%;
  height: 80dvh;
  display: flex;
  align-items: center;
  justify-content: space-between;
  align-items: center;
  flex-direction: column;
}
aside ul li {
  width: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}
#black {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background-color: var(--black-transp);
  z-index: 998;
  opacity: 0;
  visibility: hidden;
  transition: .75s all ease;
  display: flex;
  align-items: center;
  justify-content: center;
}
#black.is-active {
  opacity: 1;
  visibility: visible;
}
#black span {
  color: var(--white);
  text-align: center;
  position: relative;
  cursor: pointer;
}
#black span:hover {
  text-decoration: underline;
}
@media screen and (max-width: 1100px) {
  aside {
    width: 50vw;
    left: -60vw;
    width: 50dvw;
    left: -60dvw;
  }
  #black span {
    left: 10vw;
    left: 10dvw;
  }
}
@media screen and (max-width: 680px) {
  /*aside ul {
    position: relative;
    bottom: 30px;
  }*/
  aside ul li {
    width: 75%;
  }  
  #black span {
    left: 20vw;
    left: 20dvw;
  }
}
@media screen and (max-width: 450px) {
  aside {
    width: 60vw;
    left: -70vw;
    width: 60dvw;
    left: -70dvw;
  } 
  #black span {
    left: 30vw;
    left: 30dvw;
  }
}
@media screen and (max-width: 365px) {
  aside {
    width: 70vw;
    left: -80vw;
    width: 70dvw;
    left: -80dvw;
  }  
}
@media screen and (max-height: 700px) {
  aside ul {
    height: 95%;
  }
  aside ul li {
    height: 80%;
  }
}
@media screen and (max-height: 500px) {
  aside ul {
    height: 80%;
    position: relative;
    bottom: 20px;
  }
}

</style>